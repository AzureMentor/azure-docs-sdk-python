### YamlMime:UniversalReference
api_name: []
items:
- fullName: msrestazure.azure_active_directory.get_msi_token
  langs:
  - python
  module: msrestazure.azure_active_directory
  name: get_msi_token(resource, port=50342, msi_conf=None)
  source:
    id: get_msi_token
    path: msrestazure\azure_active_directory.py
    remote:
      branch: master
      path: msrestazure\azure_active_directory.py
      repo: https://github.com/Azure/msrestazure-for-python.git
    startLine: 462
  summary: 'Get MSI token if MSI_ENDPOINT is set.


    IF MSI_ENDPOINT is not set, will try legacy access through ''[http://localhost](http://localhost):{}/oauth2/token''.format(port).


    If msi_conf is used, must be a dict of one key in ["client_id", "object_id", "msi_res_id"]'
  syntax:
    content: get_msi_token(resource, port=50342, msi_conf=None)
    parameters:
    - description: The resource where the token would be use.
      id: resource
      type:
      - str
    - defaultValue: '50342'
      description: The port if not the default 50342 is used. Ignored if MSI_ENDPOINT
        is set.
      id: port
      type:
      - int
    - defaultValue: None
      description: msi_conf if to request a token through a User Assigned Identity
        (if not specified, assume System Assigned)
      id: msi_conf
      type:
      - dict[str,str]
  type: function
  uid: msrestazure.azure_active_directory.get_msi_token
references:
- fullName: dict[str,str]
  name: dict[str,str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str,str
    name: str,str
    uid: str,str
  - fullName: ']'
    name: ']'
  uid: dict[str,str]
