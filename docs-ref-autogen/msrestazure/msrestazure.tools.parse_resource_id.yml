### YamlMime:UniversalReference
api_name: []
items:
- fullName: msrestazure.tools.parse_resource_id
  langs:
  - python
  module: msrestazure.tools
  name: parse_resource_id(rid)
  source:
    id: parse_resource_id
    path: msrestazure\tools.py
    remote:
      branch: master
      path: msrestazure\tools.py
      repo: https://github.com/Azure/msrestazure-for-python.git
    startLine: 104
  summary: 'Parses a resource_id into its various parts.


    Returns a dictionary with a single key-value pair, ''name'': rid, if invalid resource
    id.'
  syntax:
    content: parse_resource_id(rid)
    parameters:
    - description: The resource id being parsed
      id: rid
      type:
      - str
    return:
      description: "A dictionary with with following key/value pairs (if found):\n\
        \n* subscription:            Subscription id \n\n* resource_group:       \
        \   Name of resource group \n\n* namespace:               Namespace for the\
        \ resource provider (i.e. Microsoft.Compute) \n\n* type:                 \
        \   Type of the root resource (i.e. virtualMachines) \n\n* name:         \
        \           Name of the root resource \n\n* child_namespace_{level}: Namespace\
        \ for the child resoure of that level \n\n* child_type_{level}:      Type\
        \ of the child resource of that level \n\n* child_name_{level}:      Name\
        \ of the child resource of that level \n\n* last_child_num:          Level\
        \ of the last child \n\n* resource_parent:         Computed parent in the\
        \ following pattern: providers/{namespace}        /{parent}/{type}/{name}\
        \ \n\n* resource_namespace:      Same as namespace. Note that this may be\
        \ different than the         target resource's namespace. \n\n* resource_type:\
        \           Type of the target resource (not the parent) \n\n* resource_name:\
        \           Name of the target resource (not the parent)"
      type:
      - dict[str,str]
  type: function
  uid: msrestazure.tools.parse_resource_id
references:
- fullName: dict[str,str]
  name: dict[str,str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str,str
    name: str,str
    uid: str,str
  - fullName: ']'
    name: ']'
  uid: dict[str,str]
