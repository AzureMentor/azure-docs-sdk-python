### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.sender.MessageSender.close
  - uamqp.sender.MessageSender.destroy
  - uamqp.sender.MessageSender.get_state
  - uamqp.sender.MessageSender.on_state_changed
  - uamqp.sender.MessageSender.open
  - uamqp.sender.MessageSender.send
  class: uamqp.sender.MessageSender
  fullName: uamqp.sender.MessageSender
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: uamqp.sender
  name: MessageSender
  source:
    id: MessageSender
    path: uamqp\sender.py
    remote:
      branch: HEAD
      path: uamqp\sender.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 19
  summary: 'A Message Sender that opens its own exclsuive Link on an

    existing Session.










    '
  syntax:
    content: 'MessageSender(session, source, target, name=None, send_settle_mode=<SenderSettleMode.Unsettled:
      0>, receive_settle_mode=<ReceiverSettleMode.PeekLock: 1>, max_message_size=262144,
      link_credit=None, properties=None, error_policy=None, debug=False, encoding=''UTF-8'')'
    parameters:
    - description: 'The underlying Session with which to send.

        '
      id: session
      type:
      - uamqp.session.Session
    - description: 'The name of source (i.e. the client).

        '
      id: source
      type:
      - str
      - bytes
    - description: 'The AMQP endpoint to send to.

        '
      id: target
      type:
      - uamqp.address.Target
    - description: 'A unique name for the sender. If not specified a GUID will be
        used.

        '
      id: name
      type:
      - str
      - bytes
    - description: 'The mode by which to settle message send

        operations. If set to *Unsettled*, the client will wait for a confirmation

        from the service that the message was successfully send. If set to ''Settled'',

        the client will not wait for confirmation and assume success.

        '
      id: send_settle_mode
      type:
      - uamqp.constants.SenderSettleMode
    - description: 'The maximum allowed message size negotiated for the Link.

        '
      id: max_message_size
      type:
      - int
    - description: 'The sender Link credit that determines how many

        messages the Link will attempt to handle per connection iteration.

        '
      id: link_credit
      type:
      - int
    - description: 'Data to be sent in the Link ATTACH frame.

        '
      id: properties
      type:
      - dict
    - description: 'A policy for parsing errors on link, connection and message

        disposition to determine whether the error should be retryable.

        '
      id: error_policy
      type:
      - uamqp.errors.ErrorPolicy
    - description: 'Whether to turn on network trace logs. If *True*, trace logs

        will be logged at INFO level. Default is *False*.

        '
      id: debug
      type:
      - bool
    - description: 'The encoding to use for parameters supplied as strings.

        Default is ''UTF-8''

        '
      id: encoding
      type:
      - str
    variables:
    - description: 'The mode by which to settle message send

        operations. If set to *Unsettled*, the client will wait for a confirmation

        from the service that the message was successfully send. If set to ''Settled'',

        the client will not wait for confirmation and assume success.

        '
      id: send_settle_mode
      type:
      - uamqp.constants.SenderSettleMode
    - description: 'The maximum allowed message size negotiated for the Link.

        '
      id: max_message_size
      type:
      - int
  type: class
  uid: uamqp.sender.MessageSender
- class: uamqp.sender.MessageSender
  fullName: uamqp.sender.MessageSender.close
  langs:
  - python
  module: uamqp.sender
  name: close
  source:
    id: close
    path: uamqp\sender.py
    remote:
      branch: HEAD
      path: uamqp\sender.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 183
  summary: 'Close the sender, leaving the link intact.

    '
  syntax:
    content: close()
    parameters: []
  type: method
  uid: uamqp.sender.MessageSender.close
- class: uamqp.sender.MessageSender
  fullName: uamqp.sender.MessageSender.destroy
  langs:
  - python
  module: uamqp.sender
  name: destroy
  source:
    id: destroy
    path: uamqp\sender.py
    remote:
      branch: HEAD
      path: uamqp\sender.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 164
  summary: 'Close both the Sender and the Link. Clean up any C objects.

    '
  syntax:
    content: destroy()
    parameters: []
  type: method
  uid: uamqp.sender.MessageSender.destroy
- class: uamqp.sender.MessageSender
  fullName: uamqp.sender.MessageSender.get_state
  langs:
  - python
  module: uamqp.sender
  name: get_state
  source:
    id: get_state
    path: uamqp\sender.py
    remote:
      branch: HEAD
      path: uamqp\sender.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 153
  summary: 'Get the state of the MessageSender and its underlying Link.

    '
  syntax:
    content: get_state()
    parameters: []
  type: method
  uid: uamqp.sender.MessageSender.get_state
- class: uamqp.sender.MessageSender
  fullName: uamqp.sender.MessageSender.on_state_changed
  langs:
  - python
  module: uamqp.sender
  name: on_state_changed
  source:
    id: on_state_changed
    path: uamqp\sender.py
    remote:
      branch: HEAD
      path: uamqp\sender.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 217
  summary: 'Callback called whenever the underlying Sender undergoes a change

    of state. This function can be overridden.

    :param previous_state: The previous Sender state.

    :type previous_state: ~uamqp.constants.MessageSenderState

    :param new_state: The new Sender state.

    :type new_state: ~uamqp.constants.MessageSenderState

    '
  syntax:
    content: on_state_changed(previous_state, new_state)
    parameters:
    - id: previous_state
    - id: new_state
  type: method
  uid: uamqp.sender.MessageSender.on_state_changed
- class: uamqp.sender.MessageSender
  fullName: uamqp.sender.MessageSender.open
  langs:
  - python
  module: uamqp.sender
  name: open
  source:
    id: open
    path: uamqp\sender.py
    remote:
      branch: HEAD
      path: uamqp\sender.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 169
  summary: 'Open the MessageSender in order to start processing messages.

    '
  syntax:
    content: open()
    parameters: []
  type: method
  uid: uamqp.sender.MessageSender.open
- class: uamqp.sender.MessageSender
  fullName: uamqp.sender.MessageSender.send
  langs:
  - python
  module: uamqp.sender
  name: send
  source:
    id: send
    path: uamqp\sender.py
    remote:
      branch: HEAD
      path: uamqp\sender.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 187
  summary: "Add a single message to the internal pending queue to be processed\nby\
    \ the Connection without waiting for it to be sent.\n:param message: The message\
    \ to send.\n:type message: ~uamqp.message.Message\n:param callback: The callback\
    \ to be run once a disposition is received\n\n\n   in receipt of the message.\
    \ The callback must take three arguments, the message,\n   the send result and\
    \ the optional delivery condition (exception).\n\n"
  syntax:
    content: send(message, callback, timeout=0)
    parameters:
    - description: 'An expiry time for the message added to the queue. If the

        message is not sent within this timeout it will be discarded with an error

        state. If set to 0, the message will not expire. The default is 0.

        '
      id: timeout
    - id: callback
    - defaultValue: '0'
      id: timeout
  type: method
  uid: uamqp.sender.MessageSender.send
references:
- fullName: uamqp.sender.MessageSender.close
  isExternal: false
  name: close
  parent: uamqp.sender.MessageSender
  uid: uamqp.sender.MessageSender.close
- fullName: uamqp.sender.MessageSender.destroy
  isExternal: false
  name: destroy
  parent: uamqp.sender.MessageSender
  uid: uamqp.sender.MessageSender.destroy
- fullName: uamqp.sender.MessageSender.get_state
  isExternal: false
  name: get_state
  parent: uamqp.sender.MessageSender
  uid: uamqp.sender.MessageSender.get_state
- fullName: uamqp.sender.MessageSender.on_state_changed
  isExternal: false
  name: on_state_changed
  parent: uamqp.sender.MessageSender
  uid: uamqp.sender.MessageSender.on_state_changed
- fullName: uamqp.sender.MessageSender.open
  isExternal: false
  name: open
  parent: uamqp.sender.MessageSender
  uid: uamqp.sender.MessageSender.open
- fullName: uamqp.sender.MessageSender.send
  isExternal: false
  name: send
  parent: uamqp.sender.MessageSender
  uid: uamqp.sender.MessageSender.send
