### YamlMime:UniversalReference
api_name: []
items:
- fullName: uamqp.receive_messages
  langs:
  - python
  module: uamqp
  name: receive_messages(source, auth=None, max_batch_size=None, timeout=0, debug=False,
    **kwargs)
  summary: Receive a batch of messages from an AMQP endpoint.
  syntax:
    content: receive_messages(source, auth=None, max_batch_size=None, timeout=0, debug=False,
      **kwargs)
    parameters:
    - description: The AMQP source endpoint to receive from.
      id: source
      type:
      - str, bytes
      - uamqp.address.Source
    - defaultValue: None
      description: "The authentication credentials for the endpoint.\nThis should\
        \ be one of the subclasses of ~uamqp.authentication.AMQPAuth. Currently\n\
        this includes:\n\n   * uamqp.authentication.SASLAnonymous \n\n   * uamqp.authentication.SASLPlain\
        \ \n\n   * uamqp.authentication.SASTokenAuth \n\nIf no authentication is supplied,\
        \ SASLAnnoymous will be used by default."
      id: auth
      type:
      - uamqp.authentication.common.AMQPAuth
    - defaultValue: None
      description: 'The maximum number of messages to return in a batch. If the

        receiver receives a smaller number than this, it will not wait to return them
        so

        the actual number returned can be anything up to this value. If the receiver
        reaches

        a timeout, an empty list will be returned.'
      id: max_batch_size
    - defaultValue: '0'
      description: 'The timeout in milliseconds after which to return if no messages

        are retrieved. If set to *0* (the default), the receiver will not timeout
        and

        will continue to wait for messages until interrupted.'
      id: timeout
    - defaultValue: 'False'
      description: 'Whether to turn on network trace logs. If *True*, trace logs

        will be logged at INFO level. Default is *False*.'
      id: debug
      type:
      - bool
    return:
      type:
      - list[uamqp.message.Message]
  type: function
  uid: uamqp.receive_messages
references:
- fullName: str, bytes
  name: str, bytes
  spec.python:
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: bytes
    name: bytes
    uid: bytes
  uid: str, bytes
- fullName: list[uamqp.message.Message]
  name: list[Message]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: uamqp.message.Message
    name: Message
    uid: uamqp.message.Message
  - fullName: ']'
    name: ']'
  uid: list[uamqp.message.Message]
