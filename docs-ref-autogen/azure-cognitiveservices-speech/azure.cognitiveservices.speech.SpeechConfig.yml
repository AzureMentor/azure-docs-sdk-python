### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.speech.SpeechConfig.authorization_token
  - azure.cognitiveservices.speech.SpeechConfig.endpoint_id
  - azure.cognitiveservices.speech.SpeechConfig.get_property
  - azure.cognitiveservices.speech.SpeechConfig.output_format
  - azure.cognitiveservices.speech.SpeechConfig.region
  - azure.cognitiveservices.speech.SpeechConfig.set_properties
  - azure.cognitiveservices.speech.SpeechConfig.set_property
  - azure.cognitiveservices.speech.SpeechConfig.set_proxy
  - azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
  - azure.cognitiveservices.speech.SpeechConfig.subscription_key
  class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: SpeechConfig
  summary: "Class that defines configurations for speech or intent recognition.\n\n\
    The configuration can be initialized in different ways:\n\n* from subscription:\
    \ pass a subscription key and a region \n\n* from endpoint: pass a subscription\
    \ key and an endpoint \n\n* from authorization token: pass an authorization token\
    \ and a region"
  syntax:
    content: 'SpeechConfig(subscription: typing.Union[str, NoneType] = None, region:
      typing.Union[str, NoneType] = None, endpoint: typing.Union[str, NoneType] =
      None, auth_token: typing.Union[str, NoneType] = None, speech_recognition_language:
      str = '''')'
    parameters:
    - description: The subscription key.
      id: subscription
    - description: The region name (see the [region page](https://aka.ms/csspeech/region)).
      id: region
    - description: The service endpoint to connect to.
      id: endpoint
    - description: The authorization token.
      id: auth_token
    - description: 'The input language to the speech recognition. The language

        is specified in BCP-47 format.'
      id: speech_recognition_language
  type: class
  uid: azure.cognitiveservices.speech.SpeechConfig
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.authorization_token
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: authorization_token
  summary: 'The authorization token that will be used for connecting to the service.



    > [!NOTE]

    > The caller needs to ensure that the authorization token is valid. Before the

    >

    > authorization token expires, the caller needs to refresh it by calling this
    setter with a

    >

    > new valid token. As configuration values are copied when creating a new recognizer,
    the

    >

    > new token value will not apply to recognizers that have already been created.
    For

    >

    > recognizers that have been created before, you need to set authorization token
    of the

    >

    > corresponding recognizer to refresh the token. Otherwise, the recognizers will
    encounter

    >

    > errors during recognition.

    >'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.authorization_token
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: endpoint_id
  summary: The endpoint id.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.get_property
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'get_property(property_id: azure.cognitiveservices.speech.PropertyId) -> str'
  summary: Get a property by id.
  syntax:
    content: 'get_property(property_id: azure.cognitiveservices.speech.PropertyId)
      -> str'
    parameters:
    - description: The id of the property to be retrieved.
      id: property_id
    return:
      description: The value of the property.
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.get_property
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.output_format
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: output_format
  summary: The output format for results.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.output_format
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.region
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: region
  summary: The region key that was used to create the Recognizer.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.region
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_properties
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_properties(properties: typing.Dict[azure.cognitiveservices.speech.PropertyId,
    str])'
  summary: Set multiple properties by id.
  syntax:
    content: 'set_properties(properties: typing.Dict[azure.cognitiveservices.speech.PropertyId,
      str])'
    parameters:
    - description: A dict mapping property ids to the values to be set.
      id: properties
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_properties
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_property
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_property(property_id: azure.cognitiveservices.speech.PropertyId, value:
    str)'
  summary: Set a property by id.
  syntax:
    content: 'set_property(property_id: azure.cognitiveservices.speech.PropertyId,
      value: str)'
    parameters:
    - description: The id of the property to be set.
      id: property_id
    - description: The value to be set for the property.
      id: value
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_property
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_proxy
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_proxy(hostname: str, port: str, username: str, password: str)'
  summary: 'Set proxy information.



    > [!NOTE]

    > Proxy functionality is not available on macOS. This function will have no effect
    on

    >

    > this platform.

    >'
  syntax:
    content: 'set_proxy(hostname: str, port: str, username: str, password: str)'
    parameters:
    - description: 'The host name of the proxy server. Do not add protocol information
        (http)

        to the hostname.'
      id: hostname
    - description: The port number of the proxy server.
      id: port
    - description: The user name of the proxy server.
      id: username
    - description: The password of the proxy server.
      id: password
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_proxy
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: speech_recognition_language
  summary: The name of spoken language to be recognized in BCP-47 format.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.subscription_key
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: subscription_key
  summary: The subscription key that was used to create the Recognizer.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.subscription_key
references:
- fullName: azure.cognitiveservices.speech.SpeechConfig.authorization_token
  isExternal: false
  name: authorization_token
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.authorization_token
- fullName: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
  isExternal: false
  name: endpoint_id
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
- fullName: azure.cognitiveservices.speech.SpeechConfig.get_property
  isExternal: false
  name: 'get_property(property_id: azure.cognitiveservices.speech.PropertyId) -> str'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.get_property
- fullName: azure.cognitiveservices.speech.SpeechConfig.output_format
  isExternal: false
  name: output_format
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.output_format
- fullName: azure.cognitiveservices.speech.SpeechConfig.region
  isExternal: false
  name: region
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.region
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_properties
  isExternal: false
  name: 'set_properties(properties: typing.Dict[azure.cognitiveservices.speech.PropertyId,
    str])'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_properties
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_property
  isExternal: false
  name: 'set_property(property_id: azure.cognitiveservices.speech.PropertyId, value:
    str)'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_property
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_proxy
  isExternal: false
  name: 'set_proxy(hostname: str, port: str, username: str, password: str)'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_proxy
- fullName: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
  isExternal: false
  name: speech_recognition_language
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
- fullName: azure.cognitiveservices.speech.SpeechConfig.subscription_key
  isExternal: false
  name: subscription_key
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.subscription_key
