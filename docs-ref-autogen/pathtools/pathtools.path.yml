### YamlMime:UniversalReference
api_name: []
items:
- children:
  - pathtools.path.get_dir_walker
  - pathtools.path.walk
  - pathtools.path.listdir
  - pathtools.path.list_directories
  - pathtools.path.list_files
  - pathtools.path.absolute_path
  - pathtools.path.real_absolute_path
  - pathtools.path.parent_dir_path
  - pathtools.path.get_dir_walker
  - pathtools.path.walk
  - pathtools.path.listdir
  - pathtools.path.list_directories
  - pathtools.path.list_files
  - pathtools.path.absolute_path
  - pathtools.path.real_absolute_path
  - pathtools.path.parent_dir_path
  fullName: pathtools.path
  langs:
  - python
  module: pathtools.path
  name: path
  source:
    id: path
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 0
  summary: ':module: pathtools.path

    :synopsis: Directory walking, listing, and path sanitizing functions.

    :author: Yesudeep Mangalapilly <yesudeep@gmail.com>



    Functions

    ---------

    .. autofunction:: get_dir_walker

    .. autofunction:: walk

    .. autofunction:: listdir

    .. autofunction:: list_directories

    .. autofunction:: list_files

    .. autofunction:: absolute_path

    .. autofunction:: real_absolute_path

    .. autofunction:: parent_dir_path

    '
  type: module
  uid: pathtools.path
- fullName: pathtools.path.get_dir_walker
  langs:
  - python
  module: pathtools.path
  name: get_dir_walker
  source:
    id: get_dir_walker
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 59
  summary: 'Returns a recursive or a non-recursive directory walker.

    '
  syntax:
    content: get_dir_walker(recursive, topdown=True, followlinks=False)
    parameters:
    - description: '`True` produces a recursive walker; `False` produces a non-recursive

        walker.

        '
      id: recursive
    - defaultValue: 'True'
      id: topdown
    - defaultValue: 'False'
      id: followlinks
    return: &id001
      description: 'A walker function.

        '
  type: function
  uid: pathtools.path.get_dir_walker
- fullName: pathtools.path.walk
  langs:
  - python
  module: pathtools.path
  name: walk
  source:
    id: walk
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 80
  summary: 'Walks a directory tree optionally recursively. Works exactly like

    @os.walk only adding the *recursive* argument.

    '
  syntax:
    content: walk(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.walk
- fullName: pathtools.path.listdir
  langs:
  - python
  module: pathtools.path
  name: listdir
  source:
    id: listdir
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 100
  summary: 'Enlists all items using their absolute paths in a directory, optionally

    recursively.

    '
  syntax:
    content: listdir(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.listdir
- fullName: pathtools.path.list_directories
  langs:
  - python
  module: pathtools.path
  name: list_directories
  source:
    id: list_directories
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 126
  summary: 'Enlists all the directories using their absolute paths within the specified

    directory, optionally recursively.

    '
  syntax:
    content: list_directories(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.list_directories
- fullName: pathtools.path.list_files
  langs:
  - python
  module: pathtools.path
  name: list_files
  source:
    id: list_files
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 150
  summary: 'Enlists all the files using their absolute paths within the specified

    directory, optionally recursively.

    '
  syntax:
    content: list_files(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.list_files
- fullName: pathtools.path.absolute_path
  langs:
  - python
  module: pathtools.path
  name: absolute_path
  source:
    id: absolute_path
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 174
  summary: 'Returns the absolute path for the given path and normalizes the path.

    '
  syntax:
    content: absolute_path(path)
    parameters:
    - description: 'Path for which the absolute normalized path will be found.

        '
      id: path
    return: &id002
      description: 'Absolute normalized path.

        '
  type: function
  uid: pathtools.path.absolute_path
- fullName: pathtools.path.real_absolute_path
  langs:
  - python
  module: pathtools.path
  name: real_absolute_path
  source:
    id: real_absolute_path
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 186
  summary: 'Returns the real absolute normalized path for the given path.

    '
  syntax:
    content: real_absolute_path(path)
    parameters:
    - description: 'Path for which the real absolute normalized path will be found.

        '
      id: path
    return: &id003
      description: 'Real absolute normalized path.

        '
  type: function
  uid: pathtools.path.real_absolute_path
- fullName: pathtools.path.parent_dir_path
  langs:
  - python
  module: pathtools.path
  name: parent_dir_path
  source:
    id: parent_dir_path
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 198
  summary: 'Returns the parent directory path.

    '
  syntax:
    content: parent_dir_path(path)
    parameters:
    - description: 'Path for which the parent directory will be obtained.

        '
      id: path
    return: &id004
      description: 'Parent directory path.

        '
  type: function
  uid: pathtools.path.parent_dir_path
- fullName: pathtools.path.get_dir_walker
  langs:
  - python
  module: pathtools.path
  name: get_dir_walker
  source:
    id: get_dir_walker
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 59
  summary: 'Returns a recursive or a non-recursive directory walker.

    '
  syntax:
    content: get_dir_walker(recursive, topdown=True, followlinks=False)
    parameters:
    - description: '`True` produces a recursive walker; `False` produces a non-recursive

        walker.

        '
      id: recursive
    - defaultValue: 'True'
      id: topdown
    - defaultValue: 'False'
      id: followlinks
    return: *id001
  type: function
  uid: pathtools.path.get_dir_walker
- fullName: pathtools.path.walk
  langs:
  - python
  module: pathtools.path
  name: walk
  source:
    id: walk
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 80
  summary: 'Walks a directory tree optionally recursively. Works exactly like

    @os.walk only adding the *recursive* argument.

    '
  syntax:
    content: walk(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.walk
- fullName: pathtools.path.listdir
  langs:
  - python
  module: pathtools.path
  name: listdir
  source:
    id: listdir
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 100
  summary: 'Enlists all items using their absolute paths in a directory, optionally

    recursively.

    '
  syntax:
    content: listdir(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.listdir
- fullName: pathtools.path.list_directories
  langs:
  - python
  module: pathtools.path
  name: list_directories
  source:
    id: list_directories
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 126
  summary: 'Enlists all the directories using their absolute paths within the specified

    directory, optionally recursively.

    '
  syntax:
    content: list_directories(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.list_directories
- fullName: pathtools.path.list_files
  langs:
  - python
  module: pathtools.path
  name: list_files
  source:
    id: list_files
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 150
  summary: 'Enlists all the files using their absolute paths within the specified

    directory, optionally recursively.

    '
  syntax:
    content: list_files(dir_pathname, recursive=True, topdown=True, followlinks=False)
    parameters:
    - description: 'The directory to traverse.

        '
      id: dir_pathname
    - defaultValue: 'True'
      description: '`True` for walking recursively through the directory tree;

        `False` otherwise.

        '
      id: recursive
    - defaultValue: 'True'
      description: 'Please see the documentation for @os.walk

        '
      id: topdown
    - defaultValue: 'False'
      description: 'Please see the documentation for @os.walk

        '
      id: followlinks
  type: function
  uid: pathtools.path.list_files
- fullName: pathtools.path.absolute_path
  langs:
  - python
  module: pathtools.path
  name: absolute_path
  source:
    id: absolute_path
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 174
  summary: 'Returns the absolute path for the given path and normalizes the path.

    '
  syntax:
    content: absolute_path(path)
    parameters:
    - description: 'Path for which the absolute normalized path will be found.

        '
      id: path
    return: *id002
  type: function
  uid: pathtools.path.absolute_path
- fullName: pathtools.path.real_absolute_path
  langs:
  - python
  module: pathtools.path
  name: real_absolute_path
  source:
    id: real_absolute_path
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 186
  summary: 'Returns the real absolute normalized path for the given path.

    '
  syntax:
    content: real_absolute_path(path)
    parameters:
    - description: 'Path for which the real absolute normalized path will be found.

        '
      id: path
    return: *id003
  type: function
  uid: pathtools.path.real_absolute_path
- fullName: pathtools.path.parent_dir_path
  langs:
  - python
  module: pathtools.path
  name: parent_dir_path
  source:
    id: parent_dir_path
    path: pathtools\path.py
    remote:
      branch: HEAD
      path: pathtools\path.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 198
  summary: 'Returns the parent directory path.

    '
  syntax:
    content: parent_dir_path(path)
    parameters:
    - description: 'Path for which the parent directory will be obtained.

        '
      id: path
    return: *id004
  type: function
  uid: pathtools.path.parent_dir_path
references:
- fullName: pathtools.path.get_dir_walker
  isExternal: false
  name: get_dir_walker
  parent: pathtools.path
  uid: pathtools.path.get_dir_walker
- fullName: pathtools.path.walk
  isExternal: false
  name: walk
  parent: pathtools.path
  uid: pathtools.path.walk
- fullName: pathtools.path.listdir
  isExternal: false
  name: listdir
  parent: pathtools.path
  uid: pathtools.path.listdir
- fullName: pathtools.path.list_directories
  isExternal: false
  name: list_directories
  parent: pathtools.path
  uid: pathtools.path.list_directories
- fullName: pathtools.path.list_files
  isExternal: false
  name: list_files
  parent: pathtools.path
  uid: pathtools.path.list_files
- fullName: pathtools.path.absolute_path
  isExternal: false
  name: absolute_path
  parent: pathtools.path
  uid: pathtools.path.absolute_path
- fullName: pathtools.path.real_absolute_path
  isExternal: false
  name: real_absolute_path
  parent: pathtools.path
  uid: pathtools.path.real_absolute_path
- fullName: pathtools.path.parent_dir_path
  isExternal: false
  name: parent_dir_path
  parent: pathtools.path
  uid: pathtools.path.parent_dir_path
- fullName: pathtools.path.get_dir_walker
  isExternal: false
  name: get_dir_walker
  parent: pathtools.path
  uid: pathtools.path.get_dir_walker
- fullName: pathtools.path.walk
  isExternal: false
  name: walk
  parent: pathtools.path
  uid: pathtools.path.walk
- fullName: pathtools.path.listdir
  isExternal: false
  name: listdir
  parent: pathtools.path
  uid: pathtools.path.listdir
- fullName: pathtools.path.list_directories
  isExternal: false
  name: list_directories
  parent: pathtools.path
  uid: pathtools.path.list_directories
- fullName: pathtools.path.list_files
  isExternal: false
  name: list_files
  parent: pathtools.path
  uid: pathtools.path.list_files
- fullName: pathtools.path.absolute_path
  isExternal: false
  name: absolute_path
  parent: pathtools.path
  uid: pathtools.path.absolute_path
- fullName: pathtools.path.real_absolute_path
  isExternal: false
  name: real_absolute_path
  parent: pathtools.path
  uid: pathtools.path.real_absolute_path
- fullName: pathtools.path.parent_dir_path
  isExternal: false
  name: parent_dir_path
  parent: pathtools.path
  uid: pathtools.path.parent_dir_path
