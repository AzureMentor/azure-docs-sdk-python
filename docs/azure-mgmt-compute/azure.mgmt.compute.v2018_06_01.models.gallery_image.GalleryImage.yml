### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.compute.v2018_06_01.models.gallery_image.GalleryImage
  fullName: azure.mgmt.compute.v2018_06_01.models.gallery_image.GalleryImage
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.compute.v2018_06_01.models.resource.Resource
  langs:
  - python
  module: azure.mgmt.compute.v2018_06_01.models.gallery_image
  name: GalleryImage
  source:
    id: GalleryImage
    path: azure-mgmt-compute\azure\mgmt\compute\v2018_06_01\models\gallery_image.py
    remote:
      branch: master
      path: azure-mgmt-compute\azure\mgmt\compute\v2018_06_01\models\gallery_image.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Specifies information about the gallery image that you want to create
    or

    update.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.

    '
  syntax:
    content: GalleryImage(**kwargs)
    parameters:
    - description: 'Required. Resource location

        '
      id: location
      type:
      - str
    - description: 'Resource tags

        '
      id: tags
      type:
      - dict[str, str]
    - description: 'The description of this gallery image resource.

        '
      id: description
      type:
      - str
    - description: 'The Eula agreement for the gallery image.

        '
      id: eula
      type:
      - str
    - description: 'The privacy statement uri.

        '
      id: privacy_statement_uri
      type:
      - str
    - description: 'The release note uri.

        '
      id: release_note_uri
      type:
      - str
    - description: 'This property allows you to specify the type of the OS

        that is included in the disk if creating a VM from user-image or a

        specialized VHD. <br><br> Possible values are: <br><br> **Windows**

        <br><br> **Linux**. Possible values include: ''Windows'', ''Linux''

        '
      id: os_type
      type:
      - str
      - azure.mgmt.compute.v2018_06_01.models.OperatingSystemTypes
    - description: 'The OS State. Possible values include: ''Generalized'',

        ''Specialized''

        '
      id: os_state
      type:
      - str
      - azure.mgmt.compute.v2018_06_01.models.OperatingSystemStateTypes
    - description: 'The end of life of this gallery image.

        '
      id: end_of_life_date
      type:
      - datetime
    - description: ''
      id: identifier
      type:
      - azure.mgmt.compute.v2018_06_01.models.GalleryImageIdentifier
    - description: ''
      id: recommended
      type:
      - azure.mgmt.compute.v2018_06_01.models.RecommendedMachineConfiguration
    - description: ''
      id: disallowed
      type:
      - azure.mgmt.compute.v2018_06_01.models.Disallowed
    - description: ''
      id: purchase_plan
      type:
      - azure.mgmt.compute.v2018_06_01.models.ImagePurchasePlan
    variables:
    - description: 'Resource Id

        '
      id: id
      type:
      - str
    - description: 'Resource name

        '
      id: name
      type:
      - str
    - description: 'Resource type

        '
      id: type
      type:
      - str
    - description: 'The current state of the gallery image. The

        provisioning state, which only appears in the response. Possible values

        include: ''Creating'', ''Updating'', ''Failed'', ''Succeeded'', ''Deleting'',

        ''Migrating''

        '
      id: provisioning_state
      type:
      - str
      - azure.mgmt.compute.v2018_06_01.models.enum
  type: class
  uid: azure.mgmt.compute.v2018_06_01.models.gallery_image.GalleryImage
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
